version: '3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    volumes:
      - ./data/elastic:/var/lib/elasticsearch/data
    environment:
      - discovery.type=single-node
    mem_limit: 2g

  db:
    image: postgres:15.3-alpine
    container_name: db
    volumes:
      - pg_data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    env_file:
      - ./.env
    environment:
      - POSTGRES_NAME=$DB_NAME
      - POSTGRES_USER=$DB_USER
      - POSTGRES_PASSWORD=$DB_PASSWORD
      - POSTGRES_HOST=$DB_HOST
      - POSTGRES_PORT=$DB_PORT

  django:
    build: .
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - '8000:8000'
    env_file:
      - ./.env
    environment:
      - DJANGO_DB_NAME=$DB_NAME
      - DJANGO_DB_USER=$DB_USER
      - DJANGO_DB_PASSWORD=$DB_PASSWORD
      - DJANGO_DB_HOST=$DB_HOST
      - DJANGO_DB_PORT=$DB_PORT
    depends_on:
      - db
      - celery
      - redis

  redis:
    image: redis:6-alpine
    volumes:
      - redis_data:/data/
    expose:
      - 6379

  celery:
    build: .
    command: celery -A P14RestProject worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      - redis
volumes:
  pg_data:
  redis_data:
